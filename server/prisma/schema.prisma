// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String    @unique
  password      String
  actualCompany String?   @unique
  birthDate     DateTime?
  profileTestId String[]  @db.ObjectId
  createdAt     DateTime  @default(now())
  friends       Friend[]  @relation("userFriends")
  friendBy      Friend[]  @relation("friendBy")

  profileTest              ProfileTest @relation(fields: [profileTestId], references: [id])
  relationFeedbackFromUser Feedback[]  @relation("feedbackFromUser")
  relationFeedbackToUser   Feedback[]  @relation("feedbackToUser")

  @@unique([profileTestId])
}

model Friend {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  comment         String?
  waitingResponse String

  userId String? @db.ObjectId
  user   User?   @relation("userFriends", fields: [userId], references: [id])

  friendUserId String? @db.ObjectId
  friendUser   User?   @relation("friendBy", fields: [friendUserId], references: [id])
}

model ProfileTest {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  ask Int

  user User?
}

model Feedback {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  fromUserId    String         @db.ObjectId
  toUserId      String         @db.ObjectId
  feedbacksData FeedbackData[]

  relationFromUser User @relation("feedbackFromUser", fields: [fromUserId], references: [id])
  relationToUser   User @relation("feedbackToUser", fields: [toUserId], references: [id])
}

model FeedbackData {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  date              DateTime
  status            String
  currentRole       String
  comments          String
  usersIndicatorsId String?  @db.ObjectId
  actionPlansIds    String[] @db.ObjectId

  feedbackId String?   @db.ObjectId
  feedback   Feedback? @relation(fields: [feedbackId], references: id)

  relationUsersIndicators UsersIndicators? @relation(fields: [usersIndicatorsId], references: [id])
  relationActionPlans     ActionPlan?      @relation(fields: [actionPlansIds], references: [id])

  @@unique([usersIndicatorsId])
}

model UsersIndicators {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  templateId String   @db.ObjectId
  valuesIds  String[] @db.ObjectId

  relationIndicatorTemplate IndicatorTemplate @relation(fields: [templateId], references: [id])
  relationIndicatorValue    IndicatorValue    @relation(fields: [valuesIds], references: [id])
  relationFeedbackData      FeedbackData?
}

model IndicatorTemplate {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  name                   String
  indicatorsCategorysIds String[] @db.ObjectId

  relationIndicatorCategory IndicatorCategory @relation(fields: [indicatorsCategorysIds], references: [id])
  relationUsersIndicators   UsersIndicators[]
}

model IndicatorCategory {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  indicatorsTypesIds String[] @db.ObjectId

  relationIndicatorType     IndicatorType       @relation(fields: [indicatorsTypesIds], references: [id])
  relationIndicatorTemplate IndicatorTemplate[]
}

model IndicatorType {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  descriptionN1 String
  descriptionN2 String
  descriptionN3 String
  descriptionN4 String
  descriptionN5 String

  relationIndicatorCategory IndicatorCategory[]
  relationIndicatorValue    IndicatorValue[]
}

model IndicatorValue {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  value              Int
  indicatorsTypesIds String[] @db.ObjectId

  relationIndicatorType   IndicatorType     @relation(fields: [indicatorsTypesIds], references: [id])
  relationUsersIndicators UsersIndicators[]
}

model ActionPlan {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  action   String
  realized Boolean

  relationFeedbackData FeedbackData[]
}
