import React, { useState } from 'react';
import { HiEye, HiEyeOff } from 'react-icons/hi';
import Head from 'next/head';
import {defaultApi} from "../services/defaultApi";
import { useRouter } from 'next/router';

export default function Register() {
  const router = useRouter();

  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [actualCompany, setActualCompany] = useState('');
  const [birthDate, setBirthDate] = useState('');
  const [birthDateFormat, setBirthDateFormat] = useState<Date | null>(null);
  const [showPassword, setShowPassword] = useState(false);
  const [passwordMismatch, setPasswordMismatch] = useState(false);
  const [apiStatus, setApiStatus] = useState("start");
  const [allFieldsFilled, setAllFieldsFilled] = useState(false);

  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setName(e.target.value);
  };
  
  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setEmail(e.target.value);
  };

  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setPassword(e.target.value);
    setPasswordMismatch(false);
  };

  const handleConfirmPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setConfirmPassword(e.target.value);
    setPasswordMismatch(false);
  };

  const handleActualCompanyChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setActualCompany(e.target.value);
  };

  const handleBirthDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setBirthDate(e.target.value);
    let date = new Date(e.target.value);
    setBirthDateFormat(date);
  };

  const handleTogglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  const handleRegister = () => {
    setApiStatus("evaluating");
    if(name && email && password && actualCompany && birthDateFormat){
      setAllFieldsFilled(true);
    } else {
      setAllFieldsFilled(false);
    }
    if (password !== confirmPassword) {
      setPasswordMismatch(true);
    } else {
      if (name && email && password && actualCompany && birthDateFormat){
        registerUser();   
      } 
    }
  };

  const registerUser = async () => {
    setApiStatus("calling");
    await defaultApi
    .post("/user",{
      name: name,
      email: email,
      password: password,
      actualCompany: actualCompany,
      birthDate: birthDateFormat
    })
    .then((data) => {
      setApiStatus("done");
      setTimeout(() => {
        router.push('/');
      }, 5000); 
    }).catch(err => {
      setApiStatus("error")
      console.log("error: "+err);
      return;
    });
  }
  
  return (
    <>
      <Head>
        <title>Feedback</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='flex flex-col items-center justify-center min-h-screen bg-gray-800'>
        <div className="max-w-md w-full px-6 py-8 rounded-lg">
          <div className="flex flex-col items-center">
            <div className="flex flex-col items-center">
            <h1 className='text-white text-5xl font-bold mb-32'>meufeedback.com</h1>
              <input
                type="text"
                className="border border-gray-300 px-3 py-2 rounded-md mb-4 w-60"
                placeholder="Nome"
                value={name}
                onChange={handleNameChange}
              />
              <input
                type="email"
                className="border border-gray-300 px-3 py-2 rounded-md mb-4 w-60"
                placeholder="Email"
                value={email}
                onChange={handleEmailChange}
              />
              <div className="relative">
                <input
                  type={showPassword ? 'text' : 'password'}
                  className="border border-gray-300 px-3 py-2 rounded-md mb-4 pr-10 w-60"
                  placeholder="Senha"
                  value={password}
                  onChange={handlePasswordChange}
                />
                <button
                  className="absolute top-2 right-2"
                  onClick={handleTogglePasswordVisibility}
                >
                  {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}
                </button>
              </div>
              <input
                type={showPassword ? 'text' : 'password'}
                className="border border-gray-300 px-3 py-2 rounded-md mb-4 w-60"
                placeholder="Confirmar Senha"
                value={confirmPassword}
                onChange={handleConfirmPasswordChange}
              />
              <input
                type="text"
                className="border border-gray-300 px-3 py-2 rounded-md mb-4 w-60"
                placeholder="Empresa"
                value={actualCompany}
                onChange={handleActualCompanyChange}
              />
              <input
                type="date"
                className="border border-gray-300 px-3 py-2 rounded-md mb-4 w-60"
                placeholder="Data de Nascimento"
                value={birthDate}
                onChange={handleBirthDateChange}
              />
              {passwordMismatch && (
                <p className="text-red-500 text-sm mb-4">As senhas não coincidem.</p>
              )}
              {apiStatus === "error" && (
                <p className="text-red-500 text-sm mb-4">Não foi possível cadastrá-lo no sistema.</p>
              )}
              {apiStatus === "evaluating" && !allFieldsFilled && (
                <p className="text-red-500 text-sm mb-4">Preencha todos os campos.</p>
              )}
              {apiStatus === "calling" && (
                <p className="text-white text-sm mb-4">Cadastrando...</p>
              )}
              {apiStatus === "done" && (
                <p className="text-white text-sm mb-4">Usuário cadastrado com sucesso! Você será redirecionado para a página de Login.</p>
              )}
              {apiStatus !== "done" && apiStatus !== "calling" && (
                <button
                  className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 rounded-md w-60"
                  onClick={handleRegister}
                >
                  Cadastrar
                </button>
              )}
            </div>
          </div>
        </div>
        
      </main>
    </>
  )
}
