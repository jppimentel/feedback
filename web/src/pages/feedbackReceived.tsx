import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { useAuthentication } from '../components/useAuthentication';
import Head from 'next/head';
import Navbar from '../components/navbar';
import ListCards from '../components/listCards';
import {defaultApi} from "../services/defaultApi";

const feedbacks = [
  {
    leader: 'João das Neves',
    lastFeedback: '05/12/2022',
    totalFeedbacks: '1',
    approvalWaiting: false
  },
  {
    leader: 'Maria das Flores',
    lastFeedback: '23/05/2023',
    totalFeedbacks: '4',
    approvalWaiting: false
  }
];


export default function FeedbackReceived() {
  const router = useRouter();
  const { authenticated, isLoading } = useAuthentication();
  // const [feedbacks, setFeedbacks] = useState<any[]>([]);
  const [loadedFeedbacks, setLoadedFeedbacks] = useState(false);
  const [noFeedbacks, setNoFeedbacks] = useState(false);
  const [lastFeedbackAccepted, setLastFeedbackAccepted] = useState("");

  useEffect(() => {
    if (!authenticated && !isLoading) {
      router.push('/');
    }
  }, [authenticated, isLoading, router]);

  // useEffect(() => {
  //   const getFeedbacks = async () => {
  //     await defaultApi
  //     .get("/feedback/received/"+localStorage.getItem('userId'),{})
  //     .then((data) => {
  //       setFeedbacks(data.data);
  //       setLoadedFeedbacks(true);
  //       if(data && data.data && data.data.length === 0){
  //         setNoFeedbacks(true);
  //       }
  //       console.log("feedbacks received now: "+ JSON.stringify(feedbacks))
  //     }).catch(err => {
  //       console.log("error: "+err);
  //     });

  //   }
  //   if (localStorage.getItem('isTokenValid') && localStorage.getItem('userId')) {
  //     getFeedbacks();
  //   }
  // }, [lastFeedbackAccepted]);

  if (isLoading) {
    return <div>Carregando...</div>;
  }

  if (!authenticated) {
    return <div>Você não está autenticado.</div>;
  }
  
  return (
    <>
      <Head>
        <title>Feedback</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='h-screen'>
        <Navbar activeButton='received' />
        <div className="flex flex-col space-y-4">
          <div className="flex items-center justify-between mb-4 mt-4">
            <h1 className="text-2xl text-gray-800 font-bold ml-4">Feedbacks Recebidos</h1>
          </div>
          {feedbacks.map((feedback, index) => (
            <ListCards 
              key={"received"+index}   
              index={"received"+index}
              title={"Orientador: "+feedback.leader}
              info1={"Último Feedback: "+feedback.lastFeedback}
              info2={"Total de Feedbacks: "+feedback.totalFeedbacks}
              approvalSent={false}
              approvalWaiting={feedback.approvalWaiting}
              feedbackCards={false}
            >
            </ListCards>
          ))}
          {noFeedbacks === false && loadedFeedbacks === true && feedbacks.map((feedback, index) => (
            <ListCards 
              key={"received"+index}   
              index={"received"+index}
              title={"Orientador: "+feedback.leader}
              info1={"Último Feedback: "+feedback.lastFeedback}
              info2={"Total de Feedbacks: "+feedback.totalFeedbacks}
              approvalSent={false}
              approvalWaiting={feedback.approvalWaiting}
              feedbackCards={false}
            >
            </ListCards>
          ))}
          {noFeedbacks === false && loadedFeedbacks === false && (
            <p className='ml-4'>Carregando...</p>
          )}

          {noFeedbacks === true && loadedFeedbacks === true && (
            <p className='ml-4'>Você ainda não recebeu feedbacks.</p>
          )}
        </div>
      </main>
    </>
  );
}
